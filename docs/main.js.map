{"version":3,"sources":["./src/app/template/sidebar/sidebar.component.ts","./src/app/template/sidebar/sidebar.component.html","./src/app/servico-prestado.service.ts","./src/app/clientes/clientes.module.ts","./src/app/servico-prestado/servico-prestado-form/servico-prestado-form.component.ts","./src/app/servico-prestado/servico-prestado-form/servico-prestado-form.component.html","./src/app/login/usuario.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/clientes/clientes-routing.module.ts","./src/environments/environment.ts","./src/app/clientes/cliente.ts","./src/app/token.interceptor.ts","./src/app/clientes/clientes-lista/clientes-lista.component.html","./src/app/clientes/clientes-lista/clientes-lista.component.ts","./src/app/servico-prestado/servico-prestado-lista/servico-prestado-lista.component.html","./src/app/servico-prestado/servico-prestado-lista/servico-prestado-lista.component.ts","./src/app/clientes/clientes-form/clientes-form.component.ts","./src/app/clientes/clientes-form/clientes-form.component.html","./src/app/clientes.service.ts","./src/app/servico-prestado/servico-prestado.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/template/navbar/navbar.component.ts","./src/app/template/navbar/navbar.component.html","./src/app/app.module.ts","./src/app/servico-prestado/servico-prestado-routing.module.ts","./src/app/auth.service.ts","./src/app/template/template.module.ts","./src/app/auth.guard.ts","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/servico-prestado/servicoPrestado.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  usuarioLogado!: string;\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.usuarioLogado = this.authService.getUsuarioAutenticado();\n  }\n\n  logout(){\n    this.authService.encerrarSessao();\n    this.router.navigate(['/login'])\n  }\n}\n","<div id=\"layoutSidenav_nav\">\n    <nav class=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\n        <div class=\"sb-sidenav-menu\">\n            <div class=\"nav\">\n                <div class=\"sb-sidenav-menu-heading\">Sistema</div>\n                <a class=\"nav-link\" routerLink=\"/home\">\n                    <div class=\"sb-nav-link-icon\">\n                        <i class=\"fas fa-tachometer-alt\"></i>\n                    </div>\n                    Home\n                </a>\n                <div class=\"sb-sidenav-menu-heading\">Cadastros</div>\n                <a class=\"nav-link collapsed\" routerLink=\"/clientes\"\n                     data-toggle=\"collapse\" data-target=\"#collapseLayouts\" \n                     aria-expanded=\"false\" aria-controls=\"collapseLayouts\"\n                    ><div class=\"sb-nav-link-icon\"><i class=\"fas fa-columns\"></i></div>\n                    Clientes\n                    </a>\n            \n                <a class=\"nav-link collapsed\" routerLink=\"/servico-prestado\"\n                data-toggle=\"collapse\" data-target=\"#collapseLayouts\" \n                aria-expanded=\"false\" aria-controls=\"collapseLayouts\"\n                ><div class=\"sb-nav-link-icon\"><i class=\"fas fa-address-card\"></i></div>\n                Serviços Prestados\n                </a>\n               \n                <div class=\"sb-sidenav-menu-heading\">Logout</div>\n                <a class=\"nav-link collapsed\" (click)=\"logout();\" href=\"#\"\n                     data-toggle=\"collapse\" data-target=\"#collapseLayouts\" \n                     aria-expanded=\"false\" aria-controls=\"collapseLayouts\"\n                    ><div class=\"sb-nav-link-icon\"><i class=\"fas fa-sign-out-alt\"></i></div>\n                    Sair\n                    </a>\n                </div>\n            </div>\n        <div class=\"sb-sidenav-footer\">\n            <div class=\"small\">Usuário Logado</div>\n                {{ usuarioLogado }}\n        </div>\n    </nav>\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { servicoPrestadoBusca } from './servico-prestado/servico-prestado-lista/servicoPrestadoBusca';\nimport { ServicoPrestado } from './servico-prestado/servicoPrestado';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicoPrestadoService {\n\n  apiUrl: string = environment.apiUrl + '/api/servicos-prestados';\n\n  constructor(private http: HttpClient) { }\n\n  salvar(servicoPrestado: ServicoPrestado) : Observable<ServicoPrestado>{\n    return this.http.post<ServicoPrestado>(this.apiUrl, servicoPrestado);\n  }\n\n  buscar(nome: string, mes: number) : Observable<servicoPrestadoBusca[]>{\n    \n    const httpParams = new HttpParams()\n      .set(\"nome\", nome)\n      .set(\"mes\", mes ? mes.toString() : '');\n  \n    const url = this.apiUrl + \"?\" + httpParams.toString();\n    return this.http.get<any>(url);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClientesRoutingModule } from './clientes-routing.module';\nimport { ClientesFormComponent } from './clientes-form/clientes-form.component';\nimport { FormsModule } from '@angular/forms';\nimport { ClientesListaComponent } from './clientes-lista/clientes-lista.component';\n\n\n@NgModule({\n  declarations: [\n    ClientesFormComponent,\n    ClientesListaComponent\n  ],\n  \n  imports: [\n    CommonModule,\n    ClientesRoutingModule,\n    FormsModule\n  ],\n  exports: [\n    ClientesFormComponent,\n    ClientesListaComponent\n  ]\n})\nexport class ClientesModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ClientesService } from '../../clientes.service';\nimport { Cliente } from 'src/app/clientes/cliente';\nimport { ServicoPrestado } from '../servicoPrestado';\nimport { ServicoPrestadoService } from 'src/app/servico-prestado.service';\n\n@Component({\n  selector: 'app-servico-prestado-form',\n  templateUrl: './servico-prestado-form.component.html',\n  styleUrls: ['./servico-prestado-form.component.css']\n})\nexport class ServicoPrestadoFormComponent implements OnInit {\n\n  clientes: Cliente[] = []\n  servico: ServicoPrestado;\n  success: boolean = false;\n  errors: any;\n\n  constructor(\n    private clienteService: ClientesService,\n    private servicoPrestadoService: ServicoPrestadoService\n  ) {\n    this.servico = new ServicoPrestado();\n   }\n\n  ngOnInit(): void {\n    this.clienteService\n    .getClientes()\n    .subscribe( response => this.clientes = response);\n  }\n\n  onSubmit(){\n    this.servicoPrestadoService\n      .salvar(this.servico)\n      .subscribe( response => {\n        this.success = true;\n        this.errors = null;\n        this.servico = new ServicoPrestado();\n      }, errorResponse => {\n        this.success = false;\n        this.errors = errorResponse.error.errors;\n        \n      })\n  }\n\n}\n","<h1 class=\"mt-4\">Serviço Prestado</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrum-bitem active\">Novo</li>\n</ol>\n<div class=\"container\">\n    <form #form=\"ngForm\" (submit)=\"onSubmit()\">\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success == true\">\n                    Serviço salvo com sucesso !\n                  </div>\n                  <div class=\"alert alert-danger\" role=\"alert\" *ngFor=\"let erro of errors\" >\n                        {{ erro }}\n                  </div>\n            </div>\n        </div>\n      \n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                    <label>Cliente:</label>\n                    <select class=\"form-control\"\n                            [ngModelOptions]=\"{standalone: true}\"\n                             [(ngModel)]=\"servico.idCliente\">\n                        <option value=\"\">Selecione...</option>\n                        <option *ngFor=\" let cliente of clientes\" [ngValue]=\"cliente.id\">\n                            {{ cliente.nome }}\n                        </option>\n                    </select>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                    <label>Descricao</label>\n                    <input class=\"form-control\"\n                            [(ngModel)]=\"servico.descricao\" type=\"text\"\n                             name=\"descricao\" id=\"inputDescricao\">\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>Data:</label>\n                    <input class=\"form-control\"\n                            [(ngModel)]=\"servico.data\" type=\"text\"\n                             name=\"data\" id=\"inputData\">\n                </div>\n            </div>\n            \n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label>Valor:</label>\n                        <input class=\"form-control\"\n                                [(ngModel)]=\"servico.preco\" type=\"text\"\n                                 name=\"preco\" id=\"inputpreco\">\n                    </div>\n                </div>\n            </div>\n        \n\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <button type=\"submit\" class=\"btn btn-success\">\n                        <i class=\"fa fa-save\"></i>\n                        Salvar</button>\n\n                        <button type=\"button\" \n                            routerLink=\"/servico-prestado\"\n                            class=\"btn btn-dark ml-1\">\n                            <i class=\"fa fa-arrow-alt-circle-left\"></i>\n                            Voltar</button>\n                </div>\n            </div>\n    </form>\n</div>","export class Usuario {\n    \n    username!: string;\n    password!: string;\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"mt-4\">Home</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrumb-item active\">Bem vindo</li>\n</ol>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\nimport { LayoutComponent } from '../layout/layout.component';\nimport { ClientesFormComponent } from './clientes-form/clientes-form.component';\nimport { ClientesListaComponent } from './clientes-lista/clientes-lista.component';\n\nconst routes: Routes = [\n  { path: 'clientes', component: LayoutComponent, canActivate: [AuthGuard], children: [\n    \n    { path: 'form', component: ClientesFormComponent},\n    { path: 'form/:id', component: ClientesFormComponent},\n    { path: 'lista', component: ClientesListaComponent},\n    { path: '', redirectTo : '/clientes/lista', pathMatch: 'full' }\n    \n  ] }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientesRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://csp-api-2021.herokuapp.com',\n  clientId: 'my-angular-app',\n  clientSecret: '@2539',\n  obterTokenUrl: '/oauth/token'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class Cliente {\n    id?: number;\n    nome?: string;\n    cpf?: string;\n    dataCadastro?: string;\n\n}","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n    const tokenString = localStorage.getItem('access_token');\n\n    const url = request.url;\n\n    if ( tokenString && !url.endsWith('/oauth/token') ) {\n      const token = JSON.parse(tokenString);\n      const jwt = token.access_token;\n      request = request.clone({\n        setHeaders : {\n          Authorization: 'Bearer ' + jwt\n        }\n      })\n    }\n    return next.handle(request);\n  }\n}\n","<h1 class=\"mt-4\">Clientes</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrumb-item active\">Listagem de clientes.</li>\n</ol>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"mensagemSucesso\">\n                    {{ mensagemSucesso }}\n              </div>\n              <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"mensagemErro\" >\n                    {{ mensagemErro }}\n              </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-2\">\n            <button class=\"btn btn-primary\" (click)=\"novoCadastro()\">\n                <i class=\"fa fa-plus\"></i> Novo\n            </button>\n        </div>\n    </div>\n<br />\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <table class=\"table table-condensed table-houver\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Nome</th>\n                        <th>CPF</th>\n                        <th>Data Cadastro</th>\n                        <th>Editar / Excluir</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let cliente of clientes\">\n                        <td>{{ cliente.id }}</td>\n                        <td>{{ cliente.nome }}</td>\n                        <td>{{ cliente.cpf }}</td>\n                        <td>{{ cliente.dataCadastro }}</td>\n                        <td>\n                            <button class=\"btn btn-primary\" \n                                    routerLink=\"/clientes/form/{{ cliente.id }}\">\n                                <i class=\"fa fa-edit\"></i>\n                            </button>\n\n                            <button class=\"btn btn-danger ml-1\" (click)=\"preparaDelecao(cliente)\"\n                                    data-toggle=\"modal\" data-target=\"#modalDelecao\">\n                                <i class=\"fa fa-trash\"></i>\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div id=\"modalDelecao\" class=\"modal fade\" role=\"dialog\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4>Comfirmação</h4>\n                </div>\n                <div class=\"modal-body\" *ngIf=\"clienteSelecionado\">\n                    Deseja excluir o cliente: {{ clienteSelecionado.nome }}?\n                </div>\n\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-dark\" data-dismiss=\"modal\">Cancelar</button>\n                    <button class=\"btn btn-success\" (click)=\"deletarCliente()\" data-dismiss=\"modal\">Confirma</button>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ClientesService } from '../../clientes.service';\nimport { Cliente } from '../cliente';\n\n@Component({\n  selector: 'app-clientes-lista',\n  templateUrl: './clientes-lista.component.html',\n  styleUrls: ['./clientes-lista.component.css']\n})\nexport class ClientesListaComponent implements OnInit {\n\n  // para deixar explicito seria colocar para receber um array vazio. = []\n  clientes?: Cliente[];\n  clienteSelecionado!: Cliente;\n  mensagemSucesso?: string;\n  mensagemErro?: string;\n\n\n  constructor(\n    private clientesService: ClientesService,\n    private router: Router) {}\n\n  ngOnInit(): void {\n    this.clientesService\n      .getClientes()\n      .subscribe( resposta => this.clientes = resposta);\n  }\n\n  novoCadastro(){\n    this.router.navigate(['/clientes/form']);\n  }\n  preparaDelecao(cliente: Cliente){\n    this.clienteSelecionado = cliente;\n  }\n  deletarCliente(){\n    this.clientesService\n      .deletar( this.clienteSelecionado)\n      .subscribe( \n        response => {\n          this.mensagemSucesso ='Cliente excluido com sucesso!'\n          this.ngOnInit();\n        },\n        erro => this.mensagemErro = 'Ocorreu um erro ao deletar o(a) cliente.'\n        )\n  }\n}\n","<h1 class=\"mt-4\">Serviço Prestado</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrum-bitem active\">Consulta</li>\n</ol>\n<div class=\"container\">\n    <form #consultaForm=\"ngForm\" (submit)=\"consultar()\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <label for=\"inputNome\">Nome Cliente:</label>\n                <input type=\"text\" [(ngModel)]=\"nome\"\n                        name=\"nome\" class=\"form-control\"\n                        id=\"inputNome\">\n            </div>\n\n            <div class=\"col-md-6\">\n                <label for=\"inputMes\">Mês:</label>\n                <select [(ngModel)]=\"mes\" class=\"form-control\" name=\"mes\">\n                    <option value=\"\">Selecione...</option>\n                    <option *ngFor=\"let mes of meses\" [value]=\"mes\">\n                        {{ mes }}\n                    </option>\n                </select>\n            </div>\n        </div>\n        <br/>\n        <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <button type=\"submit\" class=\"btn btn-dark\" >\n                        <i class=\"fa fa-search\"></i> Consultar\n                    </button>\n                    \n                    <button type=\"button\"\n                            routerLink=\"/servico-prestado/form\"\n                             class=\"btn btn-primary ml-1\"  >\n                        <i class=\"fa fa-plus\"></i> Novo\n                    </button>\n            </div>\n        </div>\n    </form>\n    <br/>\n    <div class=\"row\">\n        <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"message\">\n            {{ message }}\n        </div>\n        <div class=\"col-md-12\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>Cliente</th>\n                        <th>Descrição</th>\n                        <th>Valor</th>\n                        <th>Data</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let s of lista\">\n                        <td>{{ s.cliente.nome }}</td>\n                        <td>{{ s.descricao }}</td>\n                        <td>{{ s.valor }}</td>\n                        <td>{{ s.data }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ServicoPrestadoService } from 'src/app/servico-prestado.service';\nimport { servicoPrestadoBusca } from './servicoPrestadoBusca';\n\n@Component({\n  selector: 'app-servico-prestado-lista',\n  templateUrl: './servico-prestado-lista.component.html',\n  styleUrls: ['./servico-prestado-lista.component.css']\n})\nexport class ServicoPrestadoListaComponent implements OnInit {\n\n  nome!: string;\n  mes!: number;\n  meses: number[];\n  lista?: servicoPrestadoBusca[];\n  message: any;\n  constructor(\n    private service: ServicoPrestadoService\n  ) {\n    this.meses = [1,2,3,4,5,6,7,8,9,10,11,12]\n   }\n\n  ngOnInit(): void {\n  }\n\n  consultar(){\n    this.service\n      .buscar(this.nome, this.mes)\n      .subscribe(response => {\n        this.lista = response;\n        if (this.lista.length <= 0) {\n          this.message = \"Nenhum Registro encontrado.\";\n        }else{\n          this.message = null;\n        }\n      });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ClientesService } from '../../clientes.service';\nimport { Cliente } from '../cliente';\n\n@Component({\n  selector: 'app-clientes-form',\n  templateUrl: './clientes-form.component.html',\n  styleUrls: ['./clientes-form.component.css']\n})\nexport class ClientesFormComponent implements OnInit {\n\n  cliente: Cliente;\n  success: boolean = false;\n  errors: any;\n  id?: number;\n  \n  constructor(\n    private clientesService: ClientesService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n    ) { \n      this.cliente = new Cliente();\n  }\n\n  ngOnInit(): void {\n    let params : Observable<Params> = this.activatedRoute.params\n    params.subscribe(urlParams => {\n      this.id = urlParams['id'];\n      if (this.id) {\n        this.clientesService\n          .getClienteById(this.id)\n          .subscribe(\n            response => this.cliente = response ,\n            errorResponse => this.cliente = new Cliente()\n          )\n      }\n    })\n  }\n\n  voltarListagem(){\n    this.router.navigate(['/clientes/lista'])\n  }\n\n  onSubmit(){\n    if (this.id) {\n      \n      this.clientesService\n          .atualizar(this.cliente)\n          .subscribe(response => {\n            this.success = true;\n            //this.voltarListagem();\n            this.errors = null;\n          }, errorResponse => {\n            this.errors = ['Erro ao atualizar o cliente.']\n          })\n\n    } else {\n      this.clientesService\n        .salvar(this.cliente)\n        .subscribe( response => {\n          this.success = true;\n          this.errors = null;\n          this.cliente = response;\n        }, errorResponse => {\n          this.success = false;\n          this.errors = errorResponse.error.errors;\n          \n        })\n    }\n      \n    }\n\n\n}\n","<h1 class=\"mt-4\">Clientes</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrumb-item active\">{{ cliente.id ? 'Editar Cliente.' : 'Cadastro' }}</li>\n</ol>\n<div class=\"container\">\n    <form #clienteForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" > \n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success == true\">\n                    Cliente salvo/atualizado com sucesso !\n                  </div>\n                  <div class=\"alert alert-danger\" role=\"alert\" *ngFor=\"let erro of errors\" >\n                        {{ erro }}\n                  </div>\n            </div>\n        </div>\n       <div class=\"row\" *ngIf=\"cliente.id\" >\n           <div class=\"col-md-6\">\n               <div class=\"form-group\">\n                   <label>ID:</label>\n                   <input type=\"text\" class=\"form-control\" name=\"id\"\n                            [ngModel]=\"cliente.id\" disabled=\"true\" />\n               </div>\n           </div>\n\n           <div class=\"col-md-6\">\n            <div class=\"form-group\">\n                <label>Data Cadastro</label>\n                <input type=\"text\" class=\"form-control\" name=\"dataCadastro\"\n                        [ngModel]=\"cliente.dataCadastro\" disabled=\"true\" />\n            </div>\n        </div>\n\n       </div>\n       <div class=\"row\" >\n        <div class=\"col-md-6\">\n            <div class=\"form-group\">\n                <label>Nome: *</label>\n                <input type=\"text\" class=\"form-control\" \n                        [(ngModel)]=\"cliente.nome\" name=\"nome\"/>\n            </div>\n        </div>\n\n        <div class=\"col-md-6\">\n            <div class=\"form-group\">\n                <label>CPF: *</label>\n                <input type=\"text\" class=\"form-control\" \n                        [(ngModel)]=\"cliente.cpf\" name=\"cpf\" />\n            </div>\n        </div>\n    </div>\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <button type=\"submit\" class=\"btn btn-success\" *ngIf=\"!cliente.id\">\n                    <i class=\"fa fa-save\"></i> Salvar\n                </button>\n\n                <button type=\"submit\" class=\"btn btn-dark\" *ngIf=\"cliente.id\">\n                    <i class=\"fa fa-sync\"></i> Atualizar\n                </button>\n                \n                <button type=\"button\" class=\"btn btn-primary ml-1\" (click)=\"voltarListagem()\" >\n                    <i class=\"fa fa-arrow-circle-left\"></i> Voltar\n                </button>\n            </div>\n        </div>\n    </form>\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Cliente } from './clientes/cliente';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientesService {\n\n  apiUrl: string = environment.apiUrl + '/api/clientes';\n\n  constructor( private http : HttpClient) {}\n\n  salvar(cliente : Cliente) : Observable<Cliente> {\n    return this.http.post<Cliente>(this.apiUrl , cliente);\n\n  }\n\n  atualizar(cliente : Cliente) : Observable<any> {\n    return this.http.put<Cliente>(`${this.apiUrl}/${cliente.id}` , cliente);\n\n  }\n\n  getClientes() : Observable<Cliente[]> {\n    return this.http.get<Cliente[]>(this.apiUrl);\n  }\n\n  getClienteById(id?: number) : Observable<Cliente>{\n    return this.http.get<any>(`${this.apiUrl}/${id}`);\n  }\n  deletar(cliente: Cliente) : Observable<any> {\n    return this.http.delete<any>(`${this.apiUrl}/${cliente.id}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ServicoPrestadoRoutingModule } from './servico-prestado-routing.module';\nimport { ServicoPrestadoFormComponent } from './servico-prestado-form/servico-prestado-form.component';\nimport { ServicoPrestadoListaComponent } from './servico-prestado-lista/servico-prestado-lista.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  declarations: [\n    ServicoPrestadoFormComponent,\n    ServicoPrestadoListaComponent],\n    \n  imports: [\n    CommonModule,\n    ServicoPrestadoRoutingModule,\n    FormsModule,\n    RouterModule\n\n  ], exports: [\n    ServicoPrestadoFormComponent,\n    ServicoPrestadoListaComponent\n  ]\n})\nexport class ServicoPrestadoModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'csp-app';\n\n}","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"/\">Meus Clientes</a>\n    <button class=\"btn btn-link btn-sm order-1 order-lg-0\" \n            id=\"sidebarToggle\" href=\"#\">\n        <i class=\"fas fa-bars\"></i>\n    </button>            \n</nav>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TemplateModule } from './template/template.module';\nimport { HomeComponent } from './home/home.component';\nimport { ClientesModule } from './clientes/clientes.module';\nimport { ClientesService } from './clientes.service';\nimport { from } from 'rxjs';\nimport { ServicoPrestadoModule } from './servico-prestado/servico-prestado.module';\nimport { ServicoPrestadoService } from './servico-prestado.service';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { LayoutComponent } from './layout/layout.component';\nimport { AuthService } from './auth.service';\nimport { TokenInterceptor } from './token.interceptor';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    LayoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    TemplateModule,\n    ClientesModule,\n    ServicoPrestadoModule\n  ],\n  providers: [\n    ClientesService,\n    ServicoPrestadoService,\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\nimport { LayoutComponent } from '../layout/layout.component';\nimport { ServicoPrestadoFormComponent } from './servico-prestado-form/servico-prestado-form.component';\nimport { ServicoPrestadoListaComponent } from './servico-prestado-lista/servico-prestado-lista.component';\n\nconst routes: Routes = [\n\n  { path: 'servico-prestado', canActivate: [AuthGuard], component: LayoutComponent,  children: [\n    { path: 'form', component: ServicoPrestadoFormComponent },\n    { path: 'lista', component: ServicoPrestadoListaComponent},\n    { path: '', redirectTo : '/servico-prestado/lista', pathMatch: 'full' }\n    \n  ] }\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ServicoPrestadoRoutingModule { }\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Usuario } from './login/usuario';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  apiUrl: string = environment.apiUrl + \"/api/usuarios\"\n  tokenUrl: string = environment.apiUrl + environment.obterTokenUrl\n  clientId: string = environment.clientId;\n  clientSecret: string = environment.clientSecret;\n  jwtHelper: JwtHelperService = new JwtHelperService();\n\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n    obterToken(){\n      const tokenString = localStorage.getItem('access_token')\n      if (tokenString) {\n        const token = JSON.parse(tokenString).access_token\n        return token;\n      }\n      return null;\n    }\n\n    encerrarSessao(){\n      localStorage.removeItem('access_token')\n    }\n\n    getUsuarioAutenticado(){\n      const token = this.obterToken();\n      if (token) {\n        const usuario = this.jwtHelper.decodeToken(token).user_name\n        return usuario;\n      }\n      return null;\n    }\n\n    isAuthenticated() : boolean{\n      const token = this.obterToken();\n      if (token) {\n        const expirado = this.jwtHelper.isTokenExpired(token)\n        return !expirado;\n      }\n      return false;\n    }\n\n    salvar(usuario: Usuario) : Observable<any> {\n      return this.http.post<any>(this.apiUrl, usuario);\n    }\n\n    tentarLogar(username: string, password: string) : Observable<any> { \n      const parametros = new HttpParams()\n                              .set('username', username)\n                              .set('password', password)\n                              .set('grant_type', 'password')\n      const headers = {\n        'Authorization' : 'Basic ' + btoa(`${this.clientId}:${this.clientSecret}`),\n        'Content-Type' : 'application/x-www-form-urlencoded'\n      }\n      return this.http.post(this.tokenUrl, parametros.toString(), {headers})\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [\n    NavbarComponent,\n    SidebarComponent\n  ],\n  \n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  \n  exports:[\n    NavbarComponent,\n    SidebarComponent\n  ]\n})\nexport class TemplateModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    \n      const autenticado =  this.authService.isAuthenticated();\n      if (autenticado) {\n        return true;\n      }else{\n        this.router.navigate(['/login'])\n        return false;\n      }\n  }\n  \n}\n","import { AfterViewInit, Component } from '@angular/core';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor() { }\n\n  ngAfterViewInit(){\n \n    var path = location.pathname;\n    \n$('#layoutSidenav_nav .sb-sidenav a.nav-link').each((index:any, element:any) => {\n    if ($(element).attr('href') === path) {\n        $(element).addClass(\"active\");\n    }\n});\n \n$(\"#sidebarToggle\").on(\"click\", function (event: { preventDefault: () => void; }) {\n    $(\"body\").toggleClass(\"sb-sidenav-toggled\");\n});\n}\n}\n","<app-navbar></app-navbar>\n<div id=\"layoutSidenav\">\n  <app-sidebar></app-sidebar>\n  <div id=\"layoutSidenav_content\">\n    <main>\n      <div class=\"container-fluid\">\n        <router-outlet></router-outlet>\n      </div>\n      <footer class=\"py-4 bg-light mt-auto\">\n        <div class=\"container-fluid\">\n            <div class=\"d-flex align-items-center justify-content-between small\">\n                <div class=\"text-muted\">Copyright &copy; Viana 2021</div>\n                <div>\n                    <!--  <a href=\"#\">Privacy Policy</a>\n                    &middot;\n                    <a href=\"#\">Terms &amp; Conditions</a> !-->\n                </div>\n            </div>\n        </div>\n    </footer>\n    </main>\n  </div>\n</div>\n\n\n","export class ServicoPrestado {\n\n    descricao?: string;\n    preco?: string;\n    data?: string;\n    idCliente?: number;\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: '', component: LayoutComponent, children: [\n    { path: 'home', component: HomeComponent, canActivate : [AuthGuard] },\n    { path: '', redirectTo: '/home', pathMatch: 'full' }\n  ] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { Usuario } from './usuario';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent  {\n\n  username!: string;\n  password!: string;\n  cadastrando?: boolean;\n  mensagemSucesso!: any;\n  errors?: String [];\n\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  onSubmit(){\n    this.authService\n          .tentarLogar(this.username, this.password)\n          .subscribe(response => {\n            const access_token = JSON.stringify(response);\n            localStorage.setItem('access_token', access_token)\n            this.router.navigate(['/home'])\n          }, errorResponse => {\n            this.errors = ['Usuário e/ou senha incorreto(s).']\n          })\n  }\n\n  preparaCadastro(event: Event){\n    event.preventDefault();\n    this.cadastrando = true;\n  }\n  cancelaCadastro(){\n    this.cadastrando = false;\n  }\n\n  cadastrar(){\n    const usuario: Usuario = new Usuario();\n    usuario.username = this.username;\n    usuario.password = this.password;\n    this.authService\n        .salvar(usuario)\n        .subscribe(response => {\n            this.mensagemSucesso = \"Cadastro realizado com sucesso! Efetue o login.\";\n            this.cadastrando = false;\n            this.username = '';\n            this.password = '';\n            this.errors = [];\n            }, errorResponse => {\n                this.mensagemSucesso = null;\n                this.errors = errorResponse.error.errors;\n                \n        })\n  }\n}\n","<div class=\"bg-dark\">\n    <div id=\"layoutAuthentication\">\n        <div id=\"layoutAuthentication_content\">\n            <main>\n                <div class=\"container\">\n                    <div class=\"row justify-content-center\">\n                        <div class=\"col-lg-5\">\n                            <div class=\"card shadow-lg border-0 rounded-lg mt-5\">\n                                <div class=\"card-header\">\n                                    <h3 class=\"text-center font-weight-light my-4\">\n                                        {{ cadastrando ? 'Cadastro de novo Usuário' : 'Login' }}\n                                    </h3>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"alert alert-success\" *ngIf=\"mensagemSucesso\">\n                                        {{ mensagemSucesso }}\n                                    </div>\n\n                                    <div class=\"alert alert-danger\" *ngFor=\"let erro of errors\">\n                                        {{ erro }}\n                                    </div>\n\n                                    <form #loginForm=\"ngForm\" (submit)=\"onSubmit();\">\n                                        <div class=\"form-group\">\n                                            <label class=\"small mb-1\" for=\"inputEmailAddress\">Login</label>\n                                            <input type=\"email\" name=\"username\" [(ngModel)]=\"username\"\n                                                autocomplete=\"off\" class=\"form-control py-4\" id=\"inputEmailAddress\"\n                                                placeholder=\"Digite seu Login\" />\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label class=\"small mb-1\" for=\"inputPassword\">Senha</label>\n                                            <input type=\"password\" name=\"password\" [(ngModel)]=\"password\"\n                                                class=\"form-control py-4\" id=\"inputPassword\"\n                                                placeholder=\"Digite sua Senha\" />\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <div class=\"custom-control custom-checkbox\">\n                                                <input class=\"custom-control-input\" id=\"rememberPasswordCheck\"\n                                                    type=\"checkbox\" />\n                                                <label class=\"custom-control-label\" for=\"rememberPasswordCheck\">Salvar\n                                                    Senha </label>\n                                            </div>\n                                        </div>\n                                        <div\n                                            class=\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\">\n                                            <button type=\"submit\" class=\"btn btn-primary\"\n                                                *ngIf=\"!cadastrando\">Login</button>\n                                            <!-- <a class=\"small\" href=\"password.html\">Esqueceu a senha?</a>\n                                            <a class=\"btn btn-primary\" href=\"index.html\">Login</a> -->\n                                            <button type=\"button\" class=\"btn btn-success\" (click)=\"cadastrar()\"\n                                                *ngIf=\"cadastrando\">\n                                                Cadastrar</button>\n                                            <button type=\"button\" (click)=\"cancelaCadastro();\" class=\"btn btn-dark ml-1\"\n                                                *ngIf=\"cadastrando\">Cancelar</button>\n                                        </div>\n                                    </form>\n                                </div>\n                                <div class=\"card-footer text-center\">\n                                    <div class=\"small\">\n                                        <a href=\"#\" (click)=\"preparaCadastro($event)\">Precisa de uma conta? Criar\n                                            Conta!</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n        <div id=\"layoutAuthentication_footer\">\n            <footer class=\"py-4 bg-light mt-auto\">\n                <div class=\"container-fluid\">\n                    <div class=\"d-flex align-items-center justify-content-between small\">\n                        <div class=\"text-muted\">Copyright &copy; Viana 2021</div>\n                        <div>\n                            <a href=\"#\">política de privacidade</a>\n                            &middot;\n                            <a href=\"#\">Terms &amp; Condicões</a>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        </div>\n    </div>\n</div>\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" crossorigin=\"anonymous\"></script>\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js\"\n    crossorigin=\"anonymous\"></script>\n<script src=\"js/scripts.js\"></script>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}